---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const pages = await getCollection("pages");
  return pages.map((page) => ({
    params: { slug: page.slug === "index" ? undefined : page.slug },
    props: { page },
  }));
}

const { page } = Astro.props;
const { Content } = await page.render();

// Get all pages for navigation
const allPages = await getCollection("pages");
const navPages = allPages.filter((p) => !p.slug.includes("index"));
---

<Layout
  title={page.data.title || "MereShot"}
  description={page.data.description}
>
  <nav class="nav">
    <div class="nav-container">
      <a href="/" class="logo">MereShot</a>
      <div class="nav-links">
        {
          navPages.map((navPage) => (
            <a
              href={`/${navPage.slug}`}
              class:list={["nav-link", { active: page.slug === navPage.slug }]}
            >
              {navPage.data.title}
            </a>
          ))
        }
      </div>
    </div>
  </nav>

  <main>
    <article class="content">
      <Content />
    </article>
  </main>

  <footer class="footer">
    <div class="footer-content">
      <p>&copy; {new Date().getFullYear()} MereShot. All rights reserved.</p>
    </div>
  </footer>

  <style>
    .nav {
      background: var(--white);
      border-bottom: 1px solid var(--border);
      position: sticky;
      top: 0;
      z-index: 10;
      backdrop-filter: blur(8px);
      background: rgba(255, 255, 255, 0.9);
    }

    .nav-container {
      max-width: var(--max-width);
      margin: 0 auto;
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .logo {
      font-size: 1.5rem;
      font-weight: 700;
      color: var(--accent);
      text-decoration: none;
      letter-spacing: -0.025em;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
    }

    .nav-link {
      color: var(--text-light);
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
      padding: 0.5rem 0;
      position: relative;
    }

    .nav-link::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 2px;
      background: var(--accent);
      transform: scaleX(0);
      transition: transform 0.2s ease;
    }

    .nav-link:hover,
    .nav-link.active {
      color: var(--accent);
    }

    .nav-link:hover::after,
    .nav-link.active::after {
      transform: scaleX(1);
    }

    main {
      min-height: calc(100vh - var(--nav-height) - 4rem);
      padding: 3rem 1rem;
      position: relative;
    }

    .content {
      max-width: 65ch;
      margin: 0 auto;
      background: var(--white);
      padding: 2rem;
      border-radius: 1rem;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    .footer {
      background: var(--white);
      border-top: 1px solid var(--border);
    }

    .footer-content {
      max-width: var(--max-width);
      margin: 0 auto;
      padding: 2rem;
      text-align: center;
      color: var(--text-light);
    }

    @media (max-width: 768px) {
      .nav-container {
        flex-direction: column;
        gap: 1rem;
        padding: 1rem;
      }

      .nav-links {
        flex-wrap: wrap;
        justify-content: center;
        gap: 1rem;
      }

      .content {
        padding: 1.5rem;
      }
    }
  </style>
</Layout>
